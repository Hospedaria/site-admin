@page "/reservas/cadastro"
@layout MainLayout

<PageTitle>Cadastro de reservas</PageTitle>

<div class="row d-flex">
    <div class="col-12">
        <h1>Cadastro de reserva</h1>
        <EditForm Model="Reserva" OnValidSubmit="OnValidSubmitAsync">
            <ValidationSummary />
            <div class="row">

                <div class="col-12 form-outline mb-2">
                    <label class="form-label" for="txtNome">Nome:*</label>
                    <InputText id="txtNome" type="mail" @bind-Value="Reserva!.NomeResponsavel" DisplayName="Nome"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.NomeResponsavel)" />
                </div>
            </div>
            <div class="row">

                <div class="col-6 form-outline mb-2">
                    <label class="form-label" for="txtDataInicio">Check-in:*</label>
                    <InputDate id="txtDataInicio" @bind-Value="Reserva!.DataInicioHospedagem" DisplayName="Data Início"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.DataInicioHospedagem)" />
                </div>

                <div class="col-6 form-outline mb-2">
                    <label class="form-label" for="txtDataTermino">Check-out:*</label>
                    <InputDate id="txtDataTermino" @bind-Value="Reserva!.DataTerminoHospedagem" DisplayName="Data Término"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.DataTerminoHospedagem)" />
                </div>
            </div>

            <div class="row">

                <div class="col-12 form-outline mb-2">
                    <label class="form-label" for="txtHoraChegada">Chegará às:*</label>
                    <InputText id="txtHoraChegada" type="time" @bind-Value="Reserva!.HoraChegada" DisplayName="HoraChegada"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.HoraChegada)" />
                </div>
            </div>

            <div class="form-outline mb-2">
                <label class="form-label" for="txtValor">Valor da reserva:</label>
                <InputNumber id="txtValor" @bind-Value="Reserva!.Valor" DisplayName="Valor"
                    class="form-control" />

                <ValidationMessage For="@(() => Reserva.Valor)" />
            </div>
            <div class="row">
                <div class="col-6 form-outline mb-2">
                    <label class="form-label" for="txtAdultos">Adultos:</label>
                    <InputNumber id="txtAdultos" @bind-Value="Reserva!.QuantidadeAdultos" DisplayName="Adultos"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.QuantidadeAdultos)" />
                </div>
                <div class="col-6 form-outline mb-2">
                    <label class="form-label" for="txtAdultos">Crianças:</label>
                    <InputNumber id="txtAdultos" @bind-Value="Reserva!.QuantidadeCriancas" DisplayName="Crianças"
                        class="form-control" />

                    <ValidationMessage For="@(() => Reserva.QuantidadeCriancas)" />
                </div>
            </div>
            <div class="form-outline mb-2">
                <label class="form-label" for="selectStatus">Status:</label>
                <InputSelect class="form-control"id="selectStatus" @bind-Value="Reserva.Status" >
                
                @foreach (var country in Enum.GetValues(typeof(EStatusReserva)))
                {
            
                    <option value="@country">@(GetStatusReservaDescription((EStatusReserva)country))</option>
                }
                </InputSelect>

                <ValidationMessage For="@(() => Reserva.Status)" />
            </div>

            <div class="form-outline mb-2">
                <label class="form-label" for="txtObservacoes">Observações:</label>
                <InputTextArea id="txtObservacoes" @bind-Value="Reserva!.Observacoes" DisplayName="Observacoes"
                    class="form-control" />

                <ValidationMessage For="@(() => Reserva.Observacoes)" />
            </div>

            <div class="form-outline mb-2">
                <label class="form-label" for="txtObservacoes">Suites:</label>
            
                <div class="d-flex flex-wrap">

                @foreach(var item in ReservaViewModel.OpcoesSuites){
                    <div class="m-2 mb-0 mt-0">
                        <input class="form-check-input" @onchange="eventArgs => { SuitesOnChange(item, eventArgs.Value);}" type="checkbox" value="@item"/> @item
                    </div>
                }

                </div>
                <ValidationMessage For="@(() => Reserva.Suites)" />
            </div>


            <button class="btn btn-primary form-control rounded-pill" type="submit">Cadastrar</button>
        </EditForm>
    </div>
</div>



@code {
    ReservaViewModel Reserva { get; set; } = new();

    void SuitesOnChange(string suite, object escolhida){
        if ((bool) escolhida){
            if (!Reserva.Suites.Contains(suite))
            {
                Reserva.Suites.Add(suite);
            }
        }
        else
        {
            if (Reserva.Suites.Contains(suite))
            {
                Reserva.Suites.Remove(suite);
            }
        }
    }
    string GetStatusReservaDescription(EStatusReserva statusReserva){
        return statusReserva.GetDescription();
    }

    void OnValidSubmitAsync()
    {
        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(Reserva));
    }
}